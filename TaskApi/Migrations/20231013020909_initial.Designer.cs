// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskApi.Models;

namespace TaskApi.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20231013020909_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Russian_Russia.1251")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TaskApi.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(32)
                        .HasColumnType("character(32)")
                        .IsFixedLength(true);

                    b.Property<string>("FirstName")
                        .HasMaxLength(32)
                        .HasColumnType("character(32)")
                        .IsFixedLength(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(32)
                        .HasColumnType("character(32)")
                        .IsFixedLength(true);

                    b.Property<string>("Password")
                        .HasMaxLength(32)
                        .HasColumnType("character(32)")
                        .IsFixedLength(true);

                    b.Property<string>("Patronymic")
                        .HasMaxLength(32)
                        .HasColumnType("character(32)")
                        .IsFixedLength(true);

                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("character(32)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskApi.Models.TaskItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompletionDate")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .IsFixedLength(true);

                    b.Property<string>("CreationDate")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("character(1024)")
                        .IsFixedLength(true);

                    b.Property<string>("DueDate")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .IsFixedLength(true);

                    b.Property<int>("IsDeleted")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character(128)")
                        .IsFixedLength(true);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TaskItems");
                });
#pragma warning restore 612, 618
        }
    }
}
